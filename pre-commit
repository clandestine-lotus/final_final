#!/bin/sh

BRANCH=$(git rev-parse --abbrev-ref HEAD)
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".jsx\{0,1\}$")
JSHINT=$(git diff --cached --name-only --diff-filter=ACM | grep "\.js$")
PASS=true

if [[ "$BRANCH" == "master" || "$BRANCH" == "develop" ]]; then
  echo "You are on branch $BRANCH. Are you sure you want to commit to this branch?"
  echo "If so, commit with -n to bypass this pre-commit hook."
  exit 1
else
  echo "You're on $BRANCH. Yay!"
fi
# echo "\nValidating Javascript:\n"
# Check for eslint
which eslint &> /dev/null
if [[ "$?" == 1 ]]; then
  echo "\t\033[41mPlease install ESlint\033[0m"
  exit 1
fi

for FILE in $STAGED_FILES
do
  eslint --max-warnings 900 "$FILE"

  if [[ "$?" == 1 ]]; then
    PASS=false
  fi
done

# for FILE in $JSHINT
# do
#   echo "Testing: $FILE"
#   jshint "$FILE"

#   if [[ "$?" == 0 ]]; then
#     echo "\t\033[32mESLint Passed: $FILE\033[0m"
#   else
#     echo "\t\033[41mJSHint Failed: $FILE\033[0m"
#     PASS=false
#   fi
# done


# echo "\nJavascript validation completed!\n"â€‹
if ! $PASS; then
  echo "\033[41mCOMMIT FAILED:\033[0m Your commit contains files that should pass ESLint but do not. Please fix the ESLint errors and try again.\n"
  exit 1
else
  echo "\033[42mCOMMIT SUCCEEDED\033[0m\n"
fi
